
// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow to interpret user intents for ticket booking, handling ambiguous requests.
 *
 * - interpretUserIntents - A function that interprets user requests and provides options for dates, times, and ticket quantities.
 * - InterpretUserIntentsInput - The input type for the interpretUserIntents function.
 * - InterpretUserIntentsOutput - The return type for the interpretUserIntents function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InterpretUserIntentsInputSchema = z.object({
  userRequest: z.string().describe('The user request for ticket booking.'),
});
export type InterpretUserIntentsInput = z.infer<typeof InterpretUserIntentsInputSchema>;

const InterpretUserIntentsOutputSchema = z.object({
  event: z.string().optional().describe('The name of the event the user is interested in.'),
  date: z.string().optional().describe('The date the user is asking about.'),
  time: z.string().optional().describe('The time the user is asking about.'),
  quantity: z.number().optional().describe('The number of tickets the user wants.'),
  isAmbiguous: z.boolean().describe('Whether the user request is too ambiguous to extract any entities.'),
  additionalContext: z.string().optional().describe('Any additional context or clarification needed from the user.'),
});
export type InterpretUserIntentsOutput = z.infer<typeof InterpretUserIntentsOutputSchema>;

export async function interpretUserIntents(input: InterpretUserIntentsInput): Promise<InterpretUserIntentsOutput> {
  return interpretUserIntentsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'interpretUserIntentsPrompt',
  input: {schema: InterpretUserIntentsInputSchema},
  output: {schema: InterpretUserIntentsOutputSchema},
  prompt: `You are a ticket booking assistant. A user has made the following request:

"{{userRequest}}"

Your task is to extract the following information from the user's request:
- The event name (event)
- The date (date)
- The time (time)
- The number of tickets (quantity)

- If the user's request is a number, assume it's the desired quantity of tickets.
- If the request is ambiguous and you cannot extract any of the above entities (e.g., "I want tickets" or "help"), set 'isAmbiguous' to true.
- If you can extract at least one piece of information, set 'isAmbiguous' to false.
- Do not try to guess or suggest options. Only extract the information explicitly mentioned.

Format your output as a JSON object.
`,
});

const interpretUserIntentsFlow = ai.defineFlow(
  {
    name: 'interpretUserIntentsFlow',
    inputSchema: InterpretUserIntentsInputSchema,
    outputSchema: InterpretUserIntentsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

